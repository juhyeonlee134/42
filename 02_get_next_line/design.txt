
structure : file data
{
	integer file descriptor
	string remain
	file data pointer prev
	file data pointer next
} => circle list but last node's next is null

string
get next line(integer file descriptor)
{
	static file data pointer list
	string ret
	char array buffer[BUFFER_SIZE + 1]
	file data pointer current file
	integer read result

	current file = find file descriptor(list, file descriptor)
	if not found file descriptor in last
		current file = add file descriptor(address of list, file descriptor)
	if fail to add file descriptor
		return null
	while get output(current file, ret)
	{
		read result = read buffer(current file, buffer)
		if read result is negative
			return null
		if read result is zero
			return ret
	}
	return ret
}

get output
{
	if not contain in current file's remain
		need more data from file. so, return false
	duplicate ret from start of current file's remain to newline of current file's remain
	push to front current file's remain's remains
}

read buffer
{
	read buffer
	if fail to read buffer
		return negative
	if file pointer is end
	{
		duplicate current file's remain to ret
		remove current file
		return zero
	}
	merge current's remain and buffer
	return one
}
